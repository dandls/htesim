% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dgp.R
\name{dgp}
\alias{dgp}
\title{Create manual for data generation}
\usage{
dgp(
  p = 0.5,
  m = 0,
  t = 0,
  sd = 1,
  ol = 0,
  model = c("normal", "weibull", "binomial", "polr"),
  xmodel = c("normal", "unif"),
  rmvar = NULL
)
}
\arguments{
\item{p}{(numeric(1), character(1), function) Propensities P(trt = 1|x) (pi(x)),
default = 0.5 means that there is no confounding.}

\item{m}{(numeric(1), character (1), function) Prognostic effect (mu(x)), default 0 means that
there is no prognostic effect.}

\item{t}{(numeric(1), character(1), function) Predictive treatment effect (tau(x)),
default 0 means that there is no treatment effect.}

\item{sd}{(numeric(1), character(1), function) Standard deviation of normal distribution, only
has an effect if model = "normal".}

\item{ol}{(numeric(1)) how much of predictive effect is added to prognostic effect (overlay).
The default is ol = 0 which means that the conditional mean does not depend on treatment effect.}

\item{model}{("normal"|"weibull"|"binomial"|"polr") Name of used model to simulate outcome y.}

\item{xmodel}{("normal") Name of used model to simulate covariates x.}

\item{rmvar}{(character) Name(s) of variable(s) to be removed after simulation of the training data,
variables names always start with X plus a number, e.g., "X5".
The default NULL means no variable is removed.}
}
\value{
list of class gpd with entries:
pfct (\eqn{\pi(x)}), mfct (\eqn{\mu(x)}), tfct (\eqn{\tau(x)}), sdfct (sd for normal model),
model (model used), etc.
}
\description{
Create manual for data generation
}
\examples{
# Wager and Athey (2018) - first experiment
dgp1 <- dgp(p = pF_x1, m = mF_x1, t = 0, model = "normal", xmodel = "unif")

# Wager and Athey (2018) - second experiment
dgp2 <- dgp(p = 0.5, m = 0, t = tF_exp_x1_x2, model = "normal", xmodel = "unif")

# Wager and Athey (2018) - third experiment
dgp3 <- dgp(p = 0.5, m = 0, t = tF_exp2_x1_x2, model = "normal", xmodel = "unif")

# Nie and Wager (2020) - Setup A
dgpA <- dgp(p = pF_eta_x1_x2, m = mF_sin_x1_x5, t = tF_div_x1_x2, model = "normal", xmodel = "unif")

# Nie and Wager (2020) - Setup B
dgpB <- dgp(p = 0.5, m = mF_max_x1_x5, t = tF_log_x1_x2, model = "normal", xmodel = "normal")

# Nie and Wager (2020) - Setup C
dgpC <- dgp(p = pF_x2_x3, m = mF_log_x1_x3, t = 1, model = "normal", xmodel = "normal")

# Nie and Wager (2020) - Setup D
dgpD <- dgp(p = pF_exp_x1_x2, m = mF_max2_x1_x5, t = tF_max_x1_x5,
model = "normal", xmodel = "normal")

}
\references{
Wager S, and Athey S (2018). "Estimation and Inference of Heterogeneous Treatment Effects using Random Forests". Journal of the American Statistical Association, 113(523).

Nie X, Wager S (2020). “Quasi-Oracle Estimation of Heterogeneous Treatment Effects.” Biometrika. ISSN 0006-3444. doi:10.1093/biomet/asaa076. Asaa076.
}
\seealso{
\code{\link{pF}}, \code{\link{mF}} and \code{\link{tF}}
for predefined functions for \code{p}, \code{m} and \code{t}.
}
